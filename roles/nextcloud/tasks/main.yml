- name: Install Nextcloud via Snap
  command: /usr/bin/snap install nextcloud

- name: Add administrator account
  command: "/snap/bin/nextcloud.manual-install \"{{ username }}\" \"{{ temporary_password }}\""

- name: Enter maintenance mode
  command: /snap/bin/nextcloud.occ maintenance:mode --on

- name: Add trusted domain
  command: "/snap/bin/nextcloud.occ config:system:set trusted_domains  1 --value=\"{{ domain }}\""

- name: Allow HTTP(S) requests through the firewall
  command: "/usr/sbin/ufw allow 80,443/tcp"

- name: Enable HTTPS using a Lets Encrypt certificate
  shell: "printf \"y\\n{{ email }}\\n{{ domain }}\\n\" | /snap/bin/nextcloud.enable-https lets-encrypt"

- name: "(HACK) Leave maintenance mode so user can log in"
  command: /snap/bin/nextcloud.occ maintenance:mode --off

- name: "(HACK) Open a browser locally to log in"
  connection: local
  command: "firefox '{{ domain }}'"

- pause:
    prompt: "Press enter after you've logged in."

- name: "(HACK) Re-enter maintenance mode"
  command: /snap/bin/nextcloud.occ maintenance:mode --on

- include_role:
    name: reboot

# I've so far been unable to find a way to automate this without editing
# the file directly, which is... unfortunate.
#
# Evaluating the file, modifying the associative array, and dumping it back
# to the file may work. I suspect this is what nextcloud.occ and such does.
- name: Configure Nextcloud to use DigitalOcean Spaces
  blockinfile:
    path: /var/snap/nextcloud/current/nextcloud/config/config.php
    insertbefore: "\\);"
    block: |
      'objectstore' => array (
        'class' => '\\OC\\Files\\ObjectStore\\S3',
        'arguments' => array (
          'bucket' => '{{ bucket }}',
          'key' => '{{ key }}',
          'secret' => '{{ secret }}',
          'hostname' => '{{ region }}.digitaloceanspaces.com',
          'region' => '{{ region }}',
          'port' => 443,
          'use_ssl' => true,
        ),
      ),

- name: Leave maintenance mode
  command: /snap/bin/nextcloud.occ maintenance:mode --off
